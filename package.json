name: Build Windows exe and release

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci || npm install --no-audit --no-fund

      - name: Build web frontend
        run: npm run build:web

      - name: Install electron-builder
        run: npm install --no-audit --no-fund --save-dev electron-builder

      - name: Build Windows installer (no auto-publish)
        run: npx electron-builder --win nsis --x64 --publish=never

      - name: Create ZIP of build/dist output
        shell: powershell
        run: |
          if (Test-Path dist) {
            $src = 'dist\*'
            $zip = Join-Path $PWD 'dist\app.zip'
            if (Test-Path $zip) { Remove-Item $zip }
            Compress-Archive -Path $src -DestinationPath $zip
            Write-Host "Created $zip"
          } elseif (Test-Path build) {
            $src = 'build\*'
            $zip = Join-Path $PWD 'build\app.zip'
            if (Test-Path $zip) { Remove-Item $zip }
            Compress-Archive -Path $src -DestinationPath $zip
            Write-Host "Created $zip"
          } else {
            Write-Host "No build or dist folder found"
            exit 1
          }

      - name: Create and push tag for release (bash)
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          TAG="v1.0.0-${{ github.run_number }}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "$TAG" -m "Release $TAG (from run $GITHUB_RUN_ID)"
          git push origin "refs/tags/$TAG"
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Create Release and upload artifacts
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          files: |
            dist/**/*.{exe,msi,nsis,zip}
            build/**/*.{exe,msi,nsis,zip}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
